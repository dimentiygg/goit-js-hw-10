{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst button = document.querySelector('button');\nconst input = document.querySelector('input');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nbutton.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  dateFormat: 'Y-m-d H:i',\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0].getTime();\n    console.log(selectedDates[0]);\n    if (new Date().getTime() >= selectedDates[0].getTime()) {\n      button.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    } else {\n      button.disabled = false;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  for (let key in value) {\n    if (value[key] >= 0 && value[key] < 10) {\n      value[key] = value[key].toString().padStart(2, '0');\n    }\n  }\n  return value;\n}\n\nbutton.addEventListener('click', () => {\n  button.disabled = true;\n  input.disabled = true;\n  const timer = setInterval(() => {\n    const value = addLeadingZero(convertMs(userSelectedDate - Date.now()));\n\n    days.textContent = `${value.days}`;\n    hours.textContent = `${value.hours}`;\n    minutes.textContent = `${value.minutes}`;\n    seconds.textContent = `${value.seconds}`;\n    if (userSelectedDate - Date.now() <= 999) {\n      clearInterval(timer);\n      button.disabled = false;\n      input.disabled = false;\n    }\n  }, 1000);\n});\n//\n"],"names":["button","input","days","hours","minutes","seconds","userSelectedDate","options","selectedDates","iziToast","flatpickr","convertMs","ms","addLeadingZero","value","key","timer"],"mappings":"2GAKA,MAAMA,EAAS,SAAS,cAAc,QAAQ,EACxCC,EAAQ,SAAS,cAAc,OAAO,EACtCC,EAAO,SAAS,cAAc,aAAa,EAC3CC,EAAQ,SAAS,cAAc,cAAc,EAC7CC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EAEvD,IAAIC,EACJN,EAAO,SAAW,GAElB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,WAAY,YACZ,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBF,EAAmBE,EAAc,CAAC,EAAE,QAAO,EAC3C,QAAQ,IAAIA,EAAc,CAAC,CAAC,EACxB,IAAI,KAAI,EAAG,QAAO,GAAMA,EAAc,CAAC,EAAE,WAC3CR,EAAO,SAAW,GAClBS,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,GAEDT,EAAO,SAAW,EAErB,CACH,EAEAU,EAAU,mBAAoBH,CAAO,EAErC,SAASI,EAAUC,EAAI,CAQrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAE1BT,EAAQ,KAAK,MAAOS,EAAK,MAAO,IAAI,EAEpCR,EAAU,KAAK,MAAQQ,EAAK,MAAO,KAAQ,GAAM,EAEjDP,EAAU,KAAK,MAASO,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASQ,EAAeC,EAAO,CAC7B,QAASC,KAAOD,EACVA,EAAMC,CAAG,GAAK,GAAKD,EAAMC,CAAG,EAAI,KAClCD,EAAMC,CAAG,EAAID,EAAMC,CAAG,EAAE,SAAQ,EAAG,SAAS,EAAG,GAAG,GAGtD,OAAOD,CACT,CAEAd,EAAO,iBAAiB,QAAS,IAAM,CACrCA,EAAO,SAAW,GAClBC,EAAM,SAAW,GACjB,MAAMe,EAAQ,YAAY,IAAM,CAC9B,MAAMF,EAAQD,EAAeF,EAAUL,EAAmB,KAAK,IAAK,CAAA,CAAC,EAErEJ,EAAK,YAAc,GAAGY,EAAM,IAAI,GAChCX,EAAM,YAAc,GAAGW,EAAM,KAAK,GAClCV,EAAQ,YAAc,GAAGU,EAAM,OAAO,GACtCT,EAAQ,YAAc,GAAGS,EAAM,OAAO,GAClCR,EAAmB,KAAK,IAAG,GAAM,MACnC,cAAcU,CAAK,EACnBhB,EAAO,SAAW,GAClBC,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAAC"}